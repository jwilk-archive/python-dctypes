#!/usr/bin/python
# encoding=UTF-8

# Copyright © 2014-2016 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from __future__ import print_function

import ConfigParser as configparser
import argparse
import os
import shutil
import subprocess as ipc
import tempfile

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('directory', metavar='<directory>')
    ap.add_argument('-o', '--output-file', metavar='<output-file>', default='a.out')
    options = ap.parse_args()
    sonames = set()
    for directory, _, filenames in os.walk(options.directory):
        for filename in filenames:
            if not filename.endswith('.dctypes'):
                continue
            path = os.path.join(directory, filename)
            cp = configparser.RawConfigParser()
            with open(path) as file:
                cp.readfp(file)
                for _, soname in cp.items('find_library'):
                    sonames.add(soname)
    tmpdir = tempfile.mkdtemp(prefix='cdtypes.')
    try:
        with open(tmpdir + '/libeverything.so', 'w') as devlib:
            for soname in sonames:
                print('INPUT({soname})'.format(soname=soname), file=devlib)
        ipc.check_call([
            'gcc', '-shared', '-nostdlib',
            '-Wl,--no-as-needed',
            '-L', tmpdir, '-leverything',
            '-o', options.output_file
        ])
    finally:
        shutil.rmtree(tmpdir)

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
